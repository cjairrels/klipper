# This file contains common pin mappings for the BIGTREETECH Manta M4P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC6
dir_pin: PA14
enable_pin: !PC7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC0
position_endstop: 0
position_max: 230
homing_speed: 80

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC1
position_endstop: 0
position_max: 230
homing_speed: 80

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
#endstop_pin: ^!PC2
endstop_pin: probe: z_virtual_endstop
#position_endstop: 0
position_max: 230
position_min: -6
homing_speed: 40
second_homing_speed: 3
homing_retract_dist: 3


[safe_z_home]
home_xy_position: 115,115
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 60.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 5
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB12
run_current: 0.800
diag_pin:
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC10
run_current: 0.800
diag_pin:
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC9
run_current: 0.800
diag_pin:
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PA13
run_current: 0.600
diag_pin:


[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD5
max_extrude_only_distance: 1000.0
microsteps: 16
rotation_distance: 7.8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Generic 3950
sensor_pin: PA0
#control: pid
#pid_Kp: 20.837
#pid_Ki: 1.037
#pid_Kd: 104.708
min_temp: 0
max_temp: 275
pressure_advance: 0.035 #PLA
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
#pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).



#[filament_motion_sensor filament_m_sensor]
#detection_length: 1
# The minimum length of filament pulled through the sensor to trigger
# a state change on the switch_pin
# Default is 7 mm.
#extruder: extruder
# The name of the extruder section this sensor is associated with.
# This parameter must be provided.
#switch_pin: PC15
#pause_on_runout:true
#runout_gcode:
    #the bed and wait
#    M190 S0
    #nozzle to reach temperature 
#    M109 S0
#insert_gcode:
#event_delay: 20
#pause_delay: 20


[heater_bed]
heater_pin: PD8
sensor_type: Generic 3950
sensor_pin: PC4
#control = pid
#pid_kp = 62.901
#pid_ki = 1.808
#pid_kd = 547.241
min_temp: 0
max_temp: 120

[fan]
#part cooling fan
pin: PD2
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.3
off_below: 0.05
hardware_pwm: false


[heater_fan hotend_fan]
pin: PD3
heater: extruder
max_power: 1.0
kick_start_time: 0.3
heater_temp: 70
fan_speed: 1.0

#[heater_fan fan2]
#pin: 

[controller_fan SoC_fan]
pin: CB1:gpio79
#pin: RPI:gpio26
max_power: 1.0
fan_speed: 1
kick_start_time: 0
stepper: stepper_x

[bltouch]
sensor_pin: PC14
control_pin: PA1
samples: 1
speed: 5
x_offset: -47.0
y_offset: -10.0
#z_offset: 0

[adxl345]
cs_pin: PD9
spi_bus: spi1
#spi_software_sclk_pin: PA5
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
axes_map: z,y,-x

[resonance_tester]
accel_chip: adxl345
probe_points: 115, 115, 20


[bed_mesh]
speed: 150
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_min: 13,10
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max: 183,220
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 5, 5
#   For rectangular beds, this is a comma separate pair of integer
#   values X, Y defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
#fade_end: 10.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target: 0
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2, 2
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
#zero_reference_position:
#   An optional X,Y coordinate that specifies the location on the bed
#   where Z = 0.  When this option is specified the mesh will be offset
#   so that zero Z adjustment occurs at this location.  The default is
#   no zero reference.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.


[input_shaper]
#shaper_freq_x: 0
#   A frequency (in Hz) of the input shaper for X axis. This is
#   usually a resonance frequency of X axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for X axis.
#shaper_freq_y: 0
#   A frequency (in Hz) of the input shaper for Y axis. This is
#   usually a resonance frequency of Y axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei. The default
#   is mzv input shaper.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.



#[neopixel rgb1]
#pin: PD0

#[neopixel rgb2]
#pin: PD1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_12345-if00

[printer]
kinematics: cartesian
max_velocity: 180
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD6,  EXP1_3=PB9,  EXP1_5=PA15, EXP1_7=PA9,   EXP1_9=<GND>,
    EXP1_2=PB8,  EXP1_4=PC3,  EXP1_6=PA10, EXP1_8=PB5,   EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PC11, EXP2_5=PC12, EXP2_7=PC13,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA8,  EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.


